{"version":3,"sources":["components/View.js","components/isGreaterThan.js","components/isOperator.js","components/Keypad.js","components/calcPostfix.js","components/getPrecedence.js","components/isEqualQty.js","components/infixToPostfix.js","components/App.js","index.js"],"names":["View","state","sizeModifier","className","this","props","id","solution","problem","React","Component","isGreaterThan","element1","element2","iterative","count","cur","isOperator","char","includes","Keypad","defaultStyle","renderBtn","arr","style","size","callBack","map","el","addToView","event","isProblemHidden","newProblemArr","Array","from","lastChar","length","init","hideProblem","key","isNaN","console","log","join","shift","unshift","push","pop","stack","filter","showProblem","hClick","document","addEventListener","type","value","onClick","onKeyDown","calculate","postFixStr","postFixArr","split","i","test","splice","Math","pow","Number","getPrecedence","symbol","isEqualQty","infixToPostfix","input","result","inputArr","replace","topOfStack","entries","index","stackStr","undefined","idx","element","trimEnd","App","problemDisplay","setState","closeBracket","open","close","solve","newProblem","slice","problemHidden","deleteLastChar","deleteChar","ReactDOM","render","querySelector"],"mappings":"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","file":"static/js/main.f12ce2aa.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\n\r\nclass View extends React.Component {\r\n\t//useState just entered as part of learning process for hooks\r\n\tstate = { sizeModifier: 'xxl' };\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"parent d-flex flex-column justify-content-end pr-3 py-1 ml-3 mr-3 viewport rounded\">\r\n\t\t\t\t<span\r\n\t\t\t\t\tclassName={`d-inline-block text-wrap d-flex flex-row justify-content-end fs-${this.props.sizeModifier}`}\r\n\t\t\t\t\tid=\"solution\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<strong>{this.props.solution || 0}</strong>\r\n\t\t\t\t</span>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName=\"equation d-flex flex-row justify-content-end text-black-50 font-weight-bold ls-1\"\r\n\t\t\t\t\tid=\"problem\"\r\n\t\t\t\t>\r\n\t\t\t\t\t{this.props.problem || ''}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default View;\r\n","//checks if element1 occurence in iterative is greater than element2\r\nconst isGreaterThan = function (element1, element2, iterative) {\r\n\tlet count = [0, 0];\r\n\r\n\tfor (const cur of iterative) {\r\n\t\tif (cur === element1) {\r\n\t\t\tcount[0]++;\r\n\t\t} else if (cur === element2) {\r\n\t\t\tcount[1]++;\r\n\t\t}\r\n\t}\r\n\r\n\treturn count[0] > count[1];\r\n};\r\n\r\nexport default isGreaterThan;\r\n","//checks if character is a mathematical operator\r\nconst isOperator = function (char) {\r\n\treturn ['+', '-', '/', '*', '^', '~', '%'].includes(char);\r\n};\r\n\r\nexport default isOperator;\r\n","import React from 'react';\r\nimport isGreaterThan from './isGreaterThan';\r\nimport isOperator from './isOperator';\r\n\r\n/* memory buttons disabled */\r\n/* \r\nTODO: keydown events for later update. Key identifiers already written in switch case.\r\n*/\r\n\r\nclass Keypad extends React.Component {\r\n\tdefaultStyle =\r\n\t\t'font-weight-bold btn-keypad border-grey rounded p-2 m-2 text-center btn unselectable';\r\n\r\n\trenderBtn = (arr, style, size = '2', callBack) => {\r\n\t\treturn arr.map((el) => {\r\n\t\t\tconst addToView = (event) => {\r\n\t\t\t\t//value props\r\n\t\t\t\tlet problem = this.props.problem;\r\n\t\t\t\tconst solution = this.props.solution;\r\n\t\t\t\tconst isProblemHidden = this.props.isProblemHidden;\r\n\t\t\t\tlet newProblemArr = Array.from(problem);\r\n\t\t\t\tlet lastChar = newProblemArr[newProblemArr.length - 1];\r\n\r\n\t\t\t\t//function props\r\n\t\t\t\tconst init = this.props.init;\r\n\t\t\t\tconst hideProblem = this.props.hideProblem;\r\n\t\t\t\tconst keypadChars = ['Backspace', 'Delete', 'c', 'C', '.'];\r\n\r\n\t\t\t\tif (\r\n\t\t\t\t\tevent.key &&\r\n\t\t\t\t\t(keypadChars.includes(event.key) ||\r\n\t\t\t\t\t\tisOperator(event.key) ||\r\n\t\t\t\t\t\t!isNaN(event.key))\r\n\t\t\t\t) {\r\n\t\t\t\t\tel = event.key;\r\n\t\t\t\t\tconsole.log('key pressed ' + event.key);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tswitch (el) {\r\n\t\t\t\t\tcase 'CE':\r\n\t\t\t\t\t\treturn init(newProblemArr.join(''));\r\n\r\n\t\t\t\t\tcase 'c':\r\n\t\t\t\t\tcase 'C':\r\n\t\t\t\t\t\thideProblem();\r\n\t\t\t\t\t\treturn init();\r\n\r\n\t\t\t\t\tcase '=':\r\n\t\t\t\t\t\treturn init(0, solution);\r\n\r\n\t\t\t\t\tcase 'mc':\r\n\t\t\t\t\tcase 'mr':\r\n\t\t\t\t\tcase 'm+':\r\n\t\t\t\t\tcase 'm-':\r\n\t\t\t\t\tcase 'ms':\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\tcase '+/-':\r\n\t\t\t\t\t\tif (newProblemArr[0] === '-') {\r\n\t\t\t\t\t\t\tnewProblemArr.shift();\r\n\t\t\t\t\t\t\tnewProblemArr.unshift('+');\r\n\t\t\t\t\t\t} else if (newProblemArr[0] === '+') {\r\n\t\t\t\t\t\t\tnewProblemArr.shift();\r\n\t\t\t\t\t\t\tnewProblemArr.unshift('-');\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (!isNaN(newProblemArr[0])) {\r\n\t\t\t\t\t\t\tnewProblemArr.unshift('+');\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase ')':\r\n\t\t\t\t\t\tif (lastChar !== '(') {\r\n\t\t\t\t\t\t\tnewProblemArr.push(')');\r\n\r\n\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\tnewProblemArr.length === 1 ||\r\n\t\t\t\t\t\t\t\tisGreaterThan(')', '(', newProblemArr)\r\n\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\tnewProblemArr.pop();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'Backspace':\r\n\t\t\t\t\tcase 'Delete':\r\n\t\t\t\t\tcase 'DEL':\r\n\t\t\t\t\t\tnewProblemArr.pop();\r\n\r\n\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t(newProblemArr.length === 1 &&\r\n\t\t\t\t\t\t\t\tisOperator(newProblemArr[0])) ||\r\n\t\t\t\t\t\t\t['(', ')'].includes(newProblemArr[0])\r\n\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\tnewProblemArr.pop();\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (newProblemArr.length === 0) {\r\n\t\t\t\t\t\t\thideProblem();\r\n\t\t\t\t\t\t\treturn init();\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase '.':\r\n\t\t\t\t\t\tif (isOperator(lastChar) || lastChar === '.') {\r\n\t\t\t\t\t\t\tnewProblemArr.pop();\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t//prevent two decimals in one number\r\n\t\t\t\t\t\tconst stack = newProblemArr.filter(\r\n\t\t\t\t\t\t\t(el) => isOperator(el) || ['(', ')', '.'].includes(el)\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tstack.push(el);\r\n\t\t\t\t\t\tconst stackStr = stack.join('');\r\n\r\n\t\t\t\t\t\tif (!stackStr.includes('..')) {\r\n\t\t\t\t\t\t\tisProblemHidden\r\n\t\t\t\t\t\t\t\t? (newProblemArr = [solution, el])\r\n\t\t\t\t\t\t\t\t: newProblemArr.push(el);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'X':\r\n\t\t\t\t\tcase 'x':\r\n\t\t\t\t\t\tif (isOperator(lastChar)) {\r\n\t\t\t\t\t\t\tnewProblemArr.pop();\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tnewProblemArr.push('*');\r\n\t\t\t\t\t\tif (isProblemHidden && solution !== '0') {\r\n\t\t\t\t\t\t\tnewProblemArr = [solution, '*'];\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tif (isOperator(el)) {\r\n\t\t\t\t\t\t\tif (isOperator(lastChar)) {\r\n\t\t\t\t\t\t\t\tnewProblemArr.pop();\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (isProblemHidden) {\r\n\t\t\t\t\t\t\t\tnewProblemArr = [solution];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tnewProblemArr.push(el);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconsole.log('newProblemArr: ' + newProblemArr.join(''));\r\n\t\t\t\tthis.props.showProblem();\r\n\t\t\t\tthis.props.hClick(newProblemArr.join(''));\r\n\t\t\t};\r\n\r\n\t\t\tdocument.addEventListener('keydown', addToView);\r\n\r\n\t\t\treturn (\r\n\t\t\t\t<input\r\n\t\t\t\t\tkey={el}\r\n\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\tclassName={`${this.defaultStyle} col-${size} ${style}`}\r\n\t\t\t\t\tvalue={el}\r\n\t\t\t\t\tonClick={callBack || addToView}\r\n\t\t\t\t\tonKeyDown={addToView}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t});\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"container m-2 mb-4\">\r\n\t\t\t\t<div className=\"row justify-content-center\">\r\n\t\t\t\t\t{this.renderBtn(\r\n\t\t\t\t\t\t['mc', 'mr', 'm+', 'm-', 'ms'],\r\n\t\t\t\t\t\t'btn-outline-secondary disabled',\r\n\t\t\t\t\t\t'1'\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"row  justify-content-center\">\r\n\t\t\t\t\t{this.renderBtn(['%'], 'btn-outline-secondary')}\r\n\t\t\t\t\t{this.renderBtn(['CE'], 'btn-outline-primary font-weight-bold')}\r\n\t\t\t\t\t{this.renderBtn(['C'], 'btn-outline-primary font-weight-bold')}\r\n\t\t\t\t\t{this.renderBtn(['DEL'], 'btn-outline-danger font-weight-bold')}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"row  justify-content-center\">\r\n\t\t\t\t\t{this.renderBtn(['^', '(', ')', '/'], 'btn-outline-secondary')}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"row  justify-content-center\">\r\n\t\t\t\t\t{this.renderBtn(['7', '8', '9'], 'btn-light')}\r\n\t\t\t\t\t{this.renderBtn(['x'], 'btn-outline-secondary')}\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"row  justify-content-center\">\r\n\t\t\t\t\t{this.renderBtn(['4', '5', '6'], 'btn-light')}\r\n\t\t\t\t\t{this.renderBtn(['-'], 'btn-outline-secondary')}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"row  justify-content-center\">\r\n\t\t\t\t\t{this.renderBtn(['1', '2', '3'], 'btn-light')}\r\n\t\t\t\t\t{this.renderBtn(['+'], 'btn-outline-secondary')}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"row  justify-content-center\">\r\n\t\t\t\t\t{this.renderBtn(['+/-'], 'btn-outline-secondary')}{' '}\r\n\t\t\t\t\t{/* needs logic */}\r\n\t\t\t\t\t{this.renderBtn(['0'], 'btn-light')}\r\n\t\t\t\t\t{this.renderBtn(['.', '='], 'btn-outline-secondary')}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Keypad;\r\n","//.calculates postFix\r\nconst calculate = (postFixStr) => {\r\n\t//split postfix using spaces in between.\r\n\tlet postFixArr = postFixStr.split(' ');\r\n\r\n\tif (postFixStr !== 'invalid entry') {\r\n\t\tfor (let i = 0; i <= postFixArr.length - 1; ) {\r\n\t\t\tif (postFixArr[i] === '+' && !isNaN(postFixArr[i - 2])) {\r\n\t\t\t\tpostFixArr.splice(\r\n\t\t\t\t\ti - 2,\r\n\t\t\t\t\t3,\r\n\t\t\t\t\tNumber(postFixArr[i - 2]) + Number(postFixArr[i - 1])\r\n\t\t\t\t);\r\n\t\t\t\ti = 0;\r\n\t\t\t} else if (postFixArr[i] === '-' && !isNaN(postFixArr[i - 2])) {\r\n\t\t\t\tpostFixArr.splice(\r\n\t\t\t\t\ti - 2,\r\n\t\t\t\t\t3,\r\n\t\t\t\t\tNumber(postFixArr[i - 2]) - Number(postFixArr[i - 1])\r\n\t\t\t\t);\r\n\t\t\t\ti = 0;\r\n\t\t\t} else if (postFixArr[i] === '*' && !isNaN(postFixArr[i - 2])) {\r\n\t\t\t\tpostFixArr.splice(\r\n\t\t\t\t\ti - 2,\r\n\t\t\t\t\t3,\r\n\t\t\t\t\tNumber(postFixArr[i - 2]) * Number(postFixArr[i - 1])\r\n\t\t\t\t);\r\n\t\t\t\ti = 0;\r\n\t\t\t} else if (postFixArr[i] === '/' && !isNaN(postFixArr[i - 2])) {\r\n\t\t\t\tpostFixArr.splice(\r\n\t\t\t\t\ti - 2,\r\n\t\t\t\t\t3,\r\n\t\t\t\t\tNumber(postFixArr[i - 2]) / Number(postFixArr[i - 1])\r\n\t\t\t\t);\r\n\t\t\t\ti = 0;\r\n\t\t\t} else if (postFixArr[i] === '^' && !isNaN(postFixArr[i - 2])) {\r\n\t\t\t\tpostFixArr.splice(\r\n\t\t\t\t\ti - 2,\r\n\t\t\t\t\t3,\r\n\t\t\t\t\tMath.pow(Number(postFixArr[i - 2]), Number(postFixArr[i - 1]))\r\n\t\t\t\t);\r\n\t\t\t\ti = 0;\r\n\t\t\t} else if (/\\w/.test(postFixArr[i])) {\r\n\t\t\t\ti++;\r\n\t\t\t} else if (isNaN(postFixArr[i]) && isNaN(postFixArr[i - 2])) {\r\n\t\t\t\treturn 'invalid entry';\r\n\t\t\t}\r\n\t\t}\r\n\t\tconsole.log('end of calculation');\r\n\t\treturn postFixArr.join('');\r\n\t} else {\r\n\t\treturn 'invalid entry';\r\n\t}\r\n}; //#end of calculate function\r\n\r\nexport default calculate;\r\n","//evaluates level of symbol\r\nconst getPrecedence = function (symbol) {\r\n\tswitch (symbol) {\r\n\t\tcase '^':\r\n\t\t\treturn 5;\r\n\t\tcase '*':\r\n\t\tcase '/':\r\n\t\tcase '~':\r\n\t\t\treturn 4;\r\n\t\tcase '+':\r\n\t\tcase '-':\r\n\t\t\treturn 3;\r\n\t\tcase '(':\r\n\t\t\treturn 2;\r\n\t\tcase '=':\r\n\t\t\treturn 1;\r\n\r\n\t\tdefault:\r\n\t\t\treturn;\r\n\t}\r\n};\r\n\r\nexport default getPrecedence;\r\n","const isEqualQty = function (element1, element2, iterative) {\r\n\tlet count = [0, 0];\r\n\r\n\tfor (const cur of iterative) {\r\n\t\tif (cur === element1) {\r\n\t\t\tcount[0]++;\r\n\t\t} else if (cur === element2) {\r\n\t\t\tcount[1]++;\r\n\t\t}\r\n\t}\r\n\r\n\treturn count[0] === count[1];\r\n};\r\n\r\nexport default isEqualQty;\r\n","import getPrecedence from './getPrecedence';\r\nimport isEqualQty from './isEqualQty';\r\nimport isOperator from './isOperator';\r\n\r\n//.converts string of infix to postfix.\r\nconst infixToPostfix = function (input) {\r\n\tlet result = '';\r\n\tconst stack = [];\r\n\tlet inputArr = input.replace(/\\s/g, '').split('');\r\n\r\n\tconst isSpecialChar = function (char) {\r\n\t\treturn ['.', '%'].includes(char);\r\n\t};\r\n\r\n\t//get top of stack or (last element of stack array)\r\n\tconst topOfStack = () => {\r\n\t\treturn stack[stack.length - 1];\r\n\t};\r\n\r\n\t//#validator\r\n\tif (\r\n\t\t(!['+', '-', '.', '('].includes(inputArr[0]) && isNaN(inputArr[0])) ||\r\n\t\t!isEqualQty('(', ')', inputArr)\r\n\t) {\r\n\t\treturn 'invalid entry';\r\n\t}\r\n\r\n\tfor (const [index, value] of inputArr.entries()) {\r\n\t\t//protect against two consecutive decimals in one number\r\n\t\tif (isOperator(value) || ['(', ')', '.'].includes(value)) {\r\n\t\t\tstack.push(value);\r\n\t\t\tlet stackStr = stack.join('');\r\n\t\t\twhile (stack.length > 0) {\r\n\t\t\t\tstack.pop();\r\n\t\t\t}\r\n\t\t\tif (stackStr.includes('..')) {\r\n\t\t\t\treturn 'invalid entry';\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//protect against missing operand\r\n\t\tif (isOperator(value) && isOperator(inputArr[index + 1])) {\r\n\t\t\treturn 'invalid entry';\r\n\t\t} else if (\r\n\t\t\tisSpecialChar(value) &&\r\n\t\t\tisOperator(inputArr[index - 1]) &&\r\n\t\t\tisOperator(inputArr[index + 1])\r\n\t\t) {\r\n\t\t\treturn 'invalid entry';\r\n\t\t} else if (value === '%' && isNaN(inputArr[index - 1])) {\r\n\t\t\treturn 'invalid entry';\r\n\t\t}\r\n\t}\r\n\r\n\t//#grouper\r\n\t//groups numeric values together\r\n\tfor (let i = 0; i <= inputArr.length - 1; ) {\r\n\t\tif (inputArr[0] === '.' && !isNaN(inputArr[1])) {\r\n\t\t\tinputArr.splice(i, 2, `0${inputArr[i] + inputArr[i + 1]}`);\r\n\t\t} else if (\r\n\t\t\t(isOperator(inputArr[i]) || ['(', ')'].includes(inputArr[i])) &&\r\n\t\t\tinputArr[i + 1] === '.'\r\n\t\t) {\r\n\t\t\tinputArr.splice(i + 1, 1, `0.`);\r\n\t\t} else if (inputArr[i + 1] === '.' && !inputArr[i].includes('.')) {\r\n\t\t\tinputArr.splice(i, 2, inputArr[i] + inputArr[i + 1]);\r\n\t\t} else if (\r\n\t\t\t['+', '-'].includes(inputArr[i]) &&\r\n\t\t\t['('].includes(inputArr[i - 1]) &&\r\n\t\t\t!isNaN(inputArr[i + 1])\r\n\t\t) {\r\n\t\t\tinputArr.splice(i, 2, inputArr[i] + inputArr[i + 1]);\r\n\t\t} else if (['+', '-'].includes(inputArr[0]) && !isNaN(inputArr[1])) {\r\n\t\t\tinputArr.splice(i, 2, inputArr[0] + inputArr[1]);\r\n\t\t} else if (!isNaN(inputArr[i]) && !isNaN(inputArr[i + 1])) {\r\n\t\t\tinputArr.splice(i, 2, inputArr[i] + inputArr[i + 1]);\r\n\t\t} else if (inputArr[i] === '(' && inputArr[i + 1] === ')') {\r\n\t\t\tinputArr.length === 2\r\n\t\t\t\t? inputArr.splice(i, 2, '0')\r\n\t\t\t\t: inputArr.splice(i, 2); //! empty bracket logic\r\n\t\t} else {\r\n\t\t\ti++;\r\n\t\t}\r\n\t}\r\n\r\n\t//checks if parentheses if preceded by a number of operator. if it's alphanumeric, it inserts a '*' at beginning of the problem inside the parentheses so the solution inside the parentheses gets multiplied to the number outside before solving the rest of the problem\r\n\tif (input.includes('(')) {\r\n\t\tfor (const [index, value] of inputArr.entries()) {\r\n\t\t\t//add * before open bracket\r\n\t\t\tif (\r\n\t\t\t\tvalue === '(' &&\r\n\t\t\t\t(/\\w/.test(inputArr[index - 1]) || inputArr[index - 1] === ')') &&\r\n\t\t\t\tinputArr[index - 1] !== undefined\r\n\t\t\t) {\r\n\t\t\t\tinputArr.splice(index, 0, '*');\r\n\t\t\t}\r\n\r\n\t\t\t//add * after closing bracket\r\n\t\t\tif (\r\n\t\t\t\tvalue === ')' &&\r\n\t\t\t\t/\\w/.test(inputArr[index + 1]) &&\r\n\t\t\t\tinputArr[index + 1] !== undefined\r\n\t\t\t) {\r\n\t\t\t\tinputArr.splice(index + 1, 0, '*');\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t//evaluate inputArr and convert to postfix\r\n\tfor (let idx = 0; idx <= inputArr.length - 1; ) {\r\n\t\tlet element = inputArr[idx];\r\n\r\n\t\tif (!isNaN(element) && inputArr[idx + 1] === '%') {\r\n\t\t\t!isNaN(inputArr[idx + 2])\r\n\t\t\t\t? inputArr.splice(\r\n\t\t\t\t\t\tidx,\r\n\t\t\t\t\t\t3,\r\n\t\t\t\t\t\t`${\r\n\t\t\t\t\t\t\t(Number(inputArr[idx]) / 100) * Number(inputArr[idx + 2])\r\n\t\t\t\t\t\t} `\r\n\t\t\t\t  )\r\n\t\t\t\t: inputArr.splice(idx, 2, `${Number(inputArr[idx]) / 100} `);\r\n\t\t\tresult += inputArr[idx];\r\n\t\t} else if (/\\w/.test(element)) {\r\n\t\t\tresult += `${element} `;\r\n\t\t} else if (element === '(') {\r\n\t\t\tstack.push(element);\r\n\t\t} else if (element === ')') {\r\n\t\t\t//if element is closing parentheses, empty stack until open parantheses has been found\r\n\t\t\twhile (topOfStack() !== '(') {\r\n\t\t\t\tresult += `${stack.pop()} `;\r\n\t\t\t}\r\n\t\t\tstack.pop();\r\n\t\t} else {\r\n\t\t\t//if element is an operator, compare precedence with top of stack\r\n\t\t\tif (getPrecedence(element) <= getPrecedence(topOfStack())) {\r\n\t\t\t\tresult += `${stack.pop()} `;\r\n\t\t\t}\r\n\t\t\tstack.push(element);\r\n\t\t}\r\n\t\tidx++;\r\n\t}\r\n\r\n\t//push remaining operators in stack to result after each element has been evaluated\r\n\twhile (stack.length > 0) {\r\n\t\tresult += `${stack.pop()} `;\r\n\t}\r\n\r\n\t//since each operator and number is followed by a space, last number/operator will contain a space, this cleans that and prepares result for calculation which splits the string by space.\r\n\treturn result.trimEnd();\r\n}; //#end of infixToPostfix function;\r\n\r\nexport default infixToPostfix;\r\n","//components\r\nimport React from 'react';\r\nimport View from './View';\r\nimport Keypad from './Keypad';\r\n\r\n//modules\r\nimport calculate from './calcPostfix';\r\nimport infixToPostfix from './infixToPostfix';\r\nimport '../index.scss';\r\nimport isOperator from './isOperator';\r\nimport isEqualQty from './isEqualQty';\r\n\r\n/* \r\nTODO:\r\n- needs refractoring for optimization\r\n- add functionality for memory\r\n- add functionality for keypress\r\n- change styling to semantic-ui\r\n */\r\n\r\nclass App extends React.Component {\r\n\tstate = {\r\n\t\tproblem: '',\r\n\t\tproblemDisplay: '',\r\n\t\tisProblemHidden: true,\r\n\t\tsizeModifier: 'xxl',\r\n\t\tsolution: '0',\r\n\t};\r\n\r\n\thideProblem = () => {\r\n\t\tthis.setState({ isProblemHidden: true, sizeModifier: 'xxl' });\r\n\t};\r\n\r\n\tshowProblem = () => {\r\n\t\tthis.setState({ isProblemHidden: false, sizeModifier: 'xl' });\r\n\t};\r\n\r\n\tcloseBracket = (open, close, arr) => {\r\n\t\twhile (!isEqualQty(open, close, arr)) {\r\n\t\t\tarr.push(close);\r\n\t\t}\r\n\t};\r\n\r\n\t//state controller function\r\n\tsolve = (newProblem, newSolution = this.state.solution) => {\r\n\t\tthis.setState({\r\n\t\t\tproblem: newProblem,\r\n\t\t\tproblemDisplay: newProblem.replace(/\\*/g, 'x'),\r\n\t\t});\r\n\r\n\t\tlet newProblemArr = Array.from(newProblem);\r\n\r\n\t\tif (calculate(infixToPostfix(newProblem)) !== 'invalid entry') {\r\n\t\t\t//if problem is clear of error, solve\r\n\t\t\tthis.setState({ solution: calculate(infixToPostfix(newProblem)) });\r\n\t\t} else if (isOperator(newProblem.slice(-1))) {\r\n\t\t\t//if last character is operator, pop and solve.\r\n\t\t\tnewProblemArr.pop();\r\n\t\t\tif (isEqualQty('(', ')', newProblemArr)) {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tsolution: calculate(infixToPostfix(newProblemArr.join(''))),\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\t//close parenthese if left open after popping operator\r\n\t\t\t\tthis.closeBracket('(', ')', newProblemArr);\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tsolution: calculate(infixToPostfix(newProblemArr.join(''))),\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} else if (\r\n\t\t\t!isEqualQty('(', ')', newProblemArr) &&\r\n\t\t\t!isNaN(newProblem.slice(-1))\r\n\t\t) {\r\n\t\t\t// close parentheses if open.\r\n\t\t\tthis.closeBracket('(', ')', newProblemArr);\r\n\t\t\tthis.setState({\r\n\t\t\t\tsolution: calculate(infixToPostfix(newProblemArr.join(''))),\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\t//initialize states\r\n\tinit = (problem, solution = 0) => {\r\n\t\tthis.setState({\r\n\t\t\tproblem: problem || '',\r\n\t\t\tproblemDisplay: problem ? problem.replace(/\\*/g, 'x') : '',\r\n\t\t\tsolution: solution,\r\n\t\t});\r\n\r\n\t\tif (!problem) {\r\n\t\t\tthis.hideProblem();\r\n\t\t} else {\r\n\t\t\tthis.showProblem();\r\n\t\t}\r\n\r\n\t\tconsole.log(problem);\r\n\t\tconsole.log(this.state.problem);\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"\">\r\n\t\t\t\t<div className=\"container border border-dark mt-2\">\r\n\t\t\t\t\t<h2 className=\"pt-2 text-center\">Scientific Calculator</h2>\r\n\t\t\t\t\t<View\r\n\t\t\t\t\t\tproblem={this.state.problemDisplay}\r\n\t\t\t\t\t\tsolution={this.state.solution}\r\n\t\t\t\t\t\tisProblemHidden={this.state.problemHidden}\r\n\t\t\t\t\t\tsizeModifier={this.state.sizeModifier}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<Keypad\r\n\t\t\t\t\t\tproblem={this.state.problem}\r\n\t\t\t\t\t\thClick={this.solve}\r\n\t\t\t\t\t\tdeleteLastChar={this.deleteChar}\r\n\t\t\t\t\t\tinit={this.init}\r\n\t\t\t\t\t\tsolution={this.state.solution}\r\n\t\t\t\t\t\thideProblem={this.hideProblem}\r\n\t\t\t\t\t\tshowProblem={this.showProblem}\r\n\t\t\t\t\t\tisProblemHidden={this.state.isProblemHidden}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<p className=\"container text-right\">&#169;Aren Ignacio</p>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n/* function App(props) {\r\n\treturn (\r\n\t\t<div className=\"container border border-dark mt-2\">\r\n\t\t\t<h5 className=\"pt-2\">Calculator - Aren I.</h5>\r\n\t\t\t<View />\r\n\t\t\t<br />\r\n\t\t\t<Keypad />\r\n\t\t</div>\r\n\t);\r\n} */\r\n\r\nexport default App;\r\n","/* \r\nTODO:\r\n */\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'));\r\n"],"sourceRoot":""}